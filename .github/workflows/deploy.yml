name: 部署並自動測試 SchedulerAgent

permissions:
  id-token: write
  contents: read

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

concurrency:
  group: scheduleragent-deploy-main
  cancel-in-progress: true

env:
  FUNCTION_DIR: SchedulerAgent_function
  AZURE_FUNCTIONAPP_NAME: ${{ secrets.AZURE_FUNCTIONAPP_NAME }}
  PYTHON_VERSION: "3.11"
  HEALTHCHECK_ENABLED: "true"   # 你已放寬 Client Certificates，可開啟雲端健康檢查

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 取得原始碼
        uses: actions/checkout@v4

      - name: 設定 Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles(format('{0}/requirements.txt', env.FUNCTION_DIR)) }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: 安裝相依（應用程式）
        run: |
          python -m pip install --upgrade pip
          pip install -r "${{ env.FUNCTION_DIR }}/requirements.txt"

      - name: 安裝測試工具
        run: |
          pip install pytest pytest-html pytest-cov

      # 讓測試可 import 到你的模組（含 SchedulerAgent_function 與根層 services）
      - name: 設定 PYTHONPATH
        run: |
          echo "PYTHONPATH=$GITHUB_WORKSPACE:$GITHUB_WORKSPACE/SchedulerAgent_function" >> $GITHUB_ENV

      # 執行單元測試：同時支援 tests/unit 與 tests
      - name: 執行單元測試（部署前）
        run: |
          mkdir -p reports
          # 若同時存在，兩者都測；不存在的資料夾會被 pytest 忽略（不會造成失敗）
          pytest -q \
            tests/unit \
            tests \
            --maxfail=1 --disable-warnings \
            --html=reports/unit-test-report.html --self-contained-html \
            --cov="SchedulerAgent_function" --cov-report=xml --cov-report=term-missing

      - name: 上傳測試報告（Artifacts）
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-artifacts
          path: |
            reports/unit-test-report.html
            coverage.xml
          if-no-files-found: ignore
          retention-days: 7

      - name: 登入 Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 發佈至 Azure Functions
        uses: azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.FUNCTION_DIR }}

      - name: 等待部署完成
        run: sleep 30

      - name: 執行健康檢查整合測試（雲端 API）
        if: env.HEALTHCHECK_ENABLED == 'true'
        env:
          AZURE_FUNCTIONAPP_NAME: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        run: |
          pytest -q tests/test_health_endpoint.py --maxfail=1 --disable-warnings
